import { PrismaService } from '../common/prisma/prisma.service';
import { Prisma } from '@prisma/client';
export declare class ListingsRepository {
    private prisma;
    constructor(prisma: PrismaService);
    findMany(args?: Prisma.ListingFindManyArgs): Promise<{
        id: string;
        createdAt: Date;
        updatedAt: Date;
        title: string;
        description: string;
        locationText: string;
        geoJson: Prisma.JsonValue | null;
        parcelSize: Prisma.Decimal;
        coordinatePolicy: boolean;
        coordinatePolicyNote: string | null;
        totalShares: number;
        pricePerShare: Prisma.Decimal;
        status: import("@prisma/client").$Enums.ListingStatus;
        collectionMint: string | null;
        ownerId: string;
    }[]>;
    findUnique(args: Prisma.ListingFindUniqueArgs): Promise<{
        id: string;
        createdAt: Date;
        updatedAt: Date;
        title: string;
        description: string;
        locationText: string;
        geoJson: Prisma.JsonValue | null;
        parcelSize: Prisma.Decimal;
        coordinatePolicy: boolean;
        coordinatePolicyNote: string | null;
        totalShares: number;
        pricePerShare: Prisma.Decimal;
        status: import("@prisma/client").$Enums.ListingStatus;
        collectionMint: string | null;
        ownerId: string;
    }>;
    findFirst(args: Prisma.ListingFindFirstArgs): Promise<{
        id: string;
        createdAt: Date;
        updatedAt: Date;
        title: string;
        description: string;
        locationText: string;
        geoJson: Prisma.JsonValue | null;
        parcelSize: Prisma.Decimal;
        coordinatePolicy: boolean;
        coordinatePolicyNote: string | null;
        totalShares: number;
        pricePerShare: Prisma.Decimal;
        status: import("@prisma/client").$Enums.ListingStatus;
        collectionMint: string | null;
        ownerId: string;
    }>;
    create(args: Prisma.ListingCreateArgs): Promise<{
        id: string;
        createdAt: Date;
        updatedAt: Date;
        title: string;
        description: string;
        locationText: string;
        geoJson: Prisma.JsonValue | null;
        parcelSize: Prisma.Decimal;
        coordinatePolicy: boolean;
        coordinatePolicyNote: string | null;
        totalShares: number;
        pricePerShare: Prisma.Decimal;
        status: import("@prisma/client").$Enums.ListingStatus;
        collectionMint: string | null;
        ownerId: string;
    }>;
    update(args: Prisma.ListingUpdateArgs): Promise<{
        id: string;
        createdAt: Date;
        updatedAt: Date;
        title: string;
        description: string;
        locationText: string;
        geoJson: Prisma.JsonValue | null;
        parcelSize: Prisma.Decimal;
        coordinatePolicy: boolean;
        coordinatePolicyNote: string | null;
        totalShares: number;
        pricePerShare: Prisma.Decimal;
        status: import("@prisma/client").$Enums.ListingStatus;
        collectionMint: string | null;
        ownerId: string;
    }>;
    delete(args: Prisma.ListingDeleteArgs): Promise<{
        id: string;
        createdAt: Date;
        updatedAt: Date;
        title: string;
        description: string;
        locationText: string;
        geoJson: Prisma.JsonValue | null;
        parcelSize: Prisma.Decimal;
        coordinatePolicy: boolean;
        coordinatePolicyNote: string | null;
        totalShares: number;
        pricePerShare: Prisma.Decimal;
        status: import("@prisma/client").$Enums.ListingStatus;
        collectionMint: string | null;
        ownerId: string;
    }>;
    count(args?: Prisma.ListingCountArgs): Promise<number>;
    upsert(args: Prisma.ListingUpsertArgs): Promise<{
        id: string;
        createdAt: Date;
        updatedAt: Date;
        title: string;
        description: string;
        locationText: string;
        geoJson: Prisma.JsonValue | null;
        parcelSize: Prisma.Decimal;
        coordinatePolicy: boolean;
        coordinatePolicyNote: string | null;
        totalShares: number;
        pricePerShare: Prisma.Decimal;
        status: import("@prisma/client").$Enums.ListingStatus;
        collectionMint: string | null;
        ownerId: string;
    }>;
}
